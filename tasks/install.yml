---
- name: Install acme.sh dependencies
  ansible.builtin.package:
    name: "{{ item }}"
  with_items: "{{ acme_sh_dependencies[ansible_os_family] }}"

- name: Ensure needed directories exist
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
  with_items:
  - "{{ acme_sh_tmp_download_path }}"
  - "{{ acme_sh_install_path }}"
  - "{{ acme_sh_install_path }}/dnsapi"
  - "{{ acme_sh_config_home }}"
  - "{{ acme_sh_cert_home }}"

- name: Download acme.sh from GitHub
  ansible.builtin.uri:
    url: "{{ acme_sh_github_raw_url }}"
    dest: "{{ acme_sh_tmp_download_path }}/acme.sh"
    mode: '0744'
    owner: root

- name: Install acme.sh
  ansible.builtin.command:
    cmd: >-
      {{ acme_sh_tmp_download_path }}/acme.sh --install
      {{ "--accountemail " + acme_sh_account_email if acme_sh_account_email else "" }}
      --home {{ acme_sh_install_path }}/
      --config-home {{ acme_sh_config_home }}
      --cert-home {{ acme_sh_cert_home }}
      --days {{ acme_sh_renew_time_in_days }}
  args:
    chdir: "{{ acme_sh_tmp_download_path }}"
    creates: "{{ acme_sh_install_path }}/acme.sh"
  register: acme_sh_install_result
  changed_when: acme_sh_install_result.rc == 0
  failed_when: acme_sh_install_result.rc != 0

- name: Remove temporary download files
  ansible.builtin.file:
    state: absent
    path: "{{ item }}"
  with_items:
  - "{{ acme_sh_tmp_download_path }}/acmesh.sh"

...
